package commands

import (
	"context"
	"fmt"
	"log/slog"
	"strings"

	"github.com/Cladkoewka/grind-tracker/internal/service"
	"gopkg.in/telebot.v3"
)

type SkillsCommand struct {
	SkillService *service.SkillService
}

func (cmd *SkillsCommand) Handle(c telebot.Context) error {
	slog.Info("–û–±—Ä–∞–±–æ—Ç–∫–∞ /skills", slog.Int64("telegram_id", c.Sender().ID))

	skills, err := cmd.SkillService.ListSkills(context.Background())
	if err != nil {
		slog.Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤", slog.String("error", err.Error()))
		return c.Send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤.")
	}

	if len(skills) == 0 {
		slog.Warn("–°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ –ø—É—Å—Ç")
		return c.Send("‚ÑπÔ∏è –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤ –ø—É—Å—Ç.")
	}

	var sb strings.Builder
	sb.WriteString("üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</b>\n\n")

	for _, skill := range skills {
		sb.WriteString(fmt.Sprintf("üõ† <b>%s</b>  (id: %d)\n", skill.Name, skill.ID))
		if strings.TrimSpace(skill.Description) != "" {
			sb.WriteString(fmt.Sprintf("‚ÄÉ‚ÄÉ%s\n", skill.Description))
		}
		sb.WriteString("\n")
	}

	slog.Info("–ù–∞–≤—ã–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã", slog.Int("count", len(skills)))
	return c.Send(sb.String(), telebot.ModeHTML)
}
