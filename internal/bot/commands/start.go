package commands

import (
	"context"
	"fmt"

	"github.com/Cladkoewka/grind-tracker/internal/service"
	"gopkg.in/telebot.v3"
)

var (
	Menu           = &telebot.ReplyMarkup{}
	BtnAbout       = Menu.Data("‚ùì –û –±–æ—Ç–µ", "about_btn")
	BtnAddActivity = Menu.Data("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "add_activity_btn")
	BtnSkills      = Menu.Data("üìö –°–ø–∏—Å–æ–∫ –Ω–∞–≤—ã–∫–æ–≤", "skills_btn")
	BtnProgress    = Menu.Data("üìà –ü—Ä–æ–≥—Ä–µ—Å—Å", "progress_btn")
	BtnExport      = Menu.Data("üì§ –≠–∫—Å–ø–æ—Ä—Ç", "export_btn")
)

type StartCommand struct {
	UserService *service.UserService
}

func (cmd *StartCommand) Handle(c telebot.Context) error {
	user, err := cmd.UserService.RegisterOrGetUser(context.Background(), c.Sender().ID, c.Sender().Username)
	if err != nil {
		return c.Send("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
	}

	msg := fmt.Sprintf("üëã –ü—Ä–∏–≤–µ—Ç, %s! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ–∏ –Ω–∞–≤—ã–∫–∏.\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", user.Username)

	Menu.Inline(
		Menu.Row(BtnAbout),
		Menu.Row(BtnAddActivity),
		Menu.Row(BtnSkills),
		Menu.Row(BtnProgress),
		Menu.Row(BtnExport),
	)

	return c.Send(msg, Menu)
}
